/*
 * This file is generated by jOOQ.
*/
package top.joylife.lemon.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import top.joylife.lemon.jooq.Keys;
import top.joylife.lemon.jooq.Lemon;
import top.joylife.lemon.jooq.tables.records.TCommentRecord;


/**
 * 评论
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TComment extends TableImpl<TCommentRecord> {

    private static final long serialVersionUID = -2040476846;

    /**
     * The reference instance of <code>lemon.t_comment</code>
     */
    public static final TComment T_COMMENT = new TComment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCommentRecord> getRecordType() {
        return TCommentRecord.class;
    }

    /**
     * The column <code>lemon.t_comment.id</code>.
     */
    public final TableField<TCommentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lemon.t_comment.user_id</code>.
     */
    public final TableField<TCommentRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lemon.t_comment.article_id</code>. 文章id
     */
    public final TableField<TCommentRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "文章id");

    /**
     * The column <code>lemon.t_comment.content</code>.
     */
    public final TableField<TCommentRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * The column <code>lemon.t_comment.create_time</code>.
     */
    public final TableField<TCommentRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>lemon.t_comment.delete_flag</code>.
     */
    public final TableField<TCommentRecord, Boolean> DELETE_FLAG = createField("delete_flag", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lemon.t_comment.status</code>.
     */
    public final TableField<TCommentRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lemon.t_comment.user_head_img</code>. 用户头像
     */
    public final TableField<TCommentRecord, String> USER_HEAD_IMG = createField("user_head_img", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "用户头像");

    /**
     * The column <code>lemon.t_comment.user_name</code>. 用户名
     */
    public final TableField<TCommentRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "用户名");

    /**
     * Create a <code>lemon.t_comment</code> table reference
     */
    public TComment() {
        this("t_comment", null);
    }

    /**
     * Create an aliased <code>lemon.t_comment</code> table reference
     */
    public TComment(String alias) {
        this(alias, T_COMMENT);
    }

    private TComment(String alias, Table<TCommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private TComment(String alias, Table<TCommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "评论");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lemon.LEMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCommentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCommentRecord> getPrimaryKey() {
        return Keys.KEY_T_COMMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCommentRecord>> getKeys() {
        return Arrays.<UniqueKey<TCommentRecord>>asList(Keys.KEY_T_COMMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TComment as(String alias) {
        return new TComment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TComment rename(String name) {
        return new TComment(name, null);
    }
}

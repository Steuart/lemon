/*
 * This file is generated by jOOQ.
*/
package top.joylife.lemon.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import top.joylife.lemon.jooq.Keys;
import top.joylife.lemon.jooq.Lemon;
import top.joylife.lemon.jooq.tables.records.TPropertiesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProperties extends TableImpl<TPropertiesRecord> {

    private static final long serialVersionUID = -970641873;

    /**
     * The reference instance of <code>lemon.t_properties</code>
     */
    public static final TProperties T_PROPERTIES = new TProperties();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPropertiesRecord> getRecordType() {
        return TPropertiesRecord.class;
    }

    /**
     * The column <code>lemon.t_properties.id</code>. id
     */
    public final TableField<TPropertiesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "id");

    /**
     * The column <code>lemon.t_properties.name</code>. 参数名字
     */
    public final TableField<TPropertiesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "参数名字");

    /**
     * The column <code>lemon.t_properties.title</code>. 参数中文名
     */
    public final TableField<TPropertiesRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "参数中文名");

    /**
     * The column <code>lemon.t_properties.value</code>. 参数值
     */
    public final TableField<TPropertiesRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "参数值");

    /**
     * The column <code>lemon.t_properties.create_time</code>. 创建时间
     */
    public final TableField<TPropertiesRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>lemon.t_properties.update_time</code>. 更新时间
     */
    public final TableField<TPropertiesRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>lemon.t_properties.status</code>. 参数状态，0-未删除，1-删除
     */
    public final TableField<TPropertiesRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "参数状态，0-未删除，1-删除");

    /**
     * Create a <code>lemon.t_properties</code> table reference
     */
    public TProperties() {
        this("t_properties", null);
    }

    /**
     * Create an aliased <code>lemon.t_properties</code> table reference
     */
    public TProperties(String alias) {
        this(alias, T_PROPERTIES);
    }

    private TProperties(String alias, Table<TPropertiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProperties(String alias, Table<TPropertiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lemon.LEMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPropertiesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PROPERTIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPropertiesRecord> getPrimaryKey() {
        return Keys.KEY_T_PROPERTIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPropertiesRecord>> getKeys() {
        return Arrays.<UniqueKey<TPropertiesRecord>>asList(Keys.KEY_T_PROPERTIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProperties as(String alias) {
        return new TProperties(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProperties rename(String name) {
        return new TProperties(name, null);
    }
}

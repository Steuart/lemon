/*
 * This file is generated by jOOQ.
*/
package top.joylife.lemon.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import top.joylife.lemon.jooq.Keys;
import top.joylife.lemon.jooq.Lemon;
import top.joylife.lemon.jooq.tables.records.TArticleTagRecord;


/**
 * 文章标签关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TArticleTag extends TableImpl<TArticleTagRecord> {

    private static final long serialVersionUID = -1714441996;

    /**
     * The reference instance of <code>lemon.t_article_tag</code>
     */
    public static final TArticleTag T_ARTICLE_TAG = new TArticleTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TArticleTagRecord> getRecordType() {
        return TArticleTagRecord.class;
    }

    /**
     * The column <code>lemon.t_article_tag.id</code>.
     */
    public final TableField<TArticleTagRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lemon.t_article_tag.article_id</code>.
     */
    public final TableField<TArticleTagRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lemon.t_article_tag.tag_id</code>.
     */
    public final TableField<TArticleTagRecord, Integer> TAG_ID = createField("tag_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>lemon.t_article_tag</code> table reference
     */
    public TArticleTag() {
        this("t_article_tag", null);
    }

    /**
     * Create an aliased <code>lemon.t_article_tag</code> table reference
     */
    public TArticleTag(String alias) {
        this(alias, T_ARTICLE_TAG);
    }

    private TArticleTag(String alias, Table<TArticleTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private TArticleTag(String alias, Table<TArticleTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "文章标签关联表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lemon.LEMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TArticleTagRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ARTICLE_TAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TArticleTagRecord> getPrimaryKey() {
        return Keys.KEY_T_ARTICLE_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TArticleTagRecord>> getKeys() {
        return Arrays.<UniqueKey<TArticleTagRecord>>asList(Keys.KEY_T_ARTICLE_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TArticleTag as(String alias) {
        return new TArticleTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TArticleTag rename(String name) {
        return new TArticleTag(name, null);
    }
}

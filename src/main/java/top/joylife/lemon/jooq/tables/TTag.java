/*
 * This file is generated by jOOQ.
*/
package top.joylife.lemon.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import top.joylife.lemon.jooq.Keys;
import top.joylife.lemon.jooq.Lemon;
import top.joylife.lemon.jooq.tables.records.TTagRecord;


/**
 * 标签
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTag extends TableImpl<TTagRecord> {

    private static final long serialVersionUID = 1866001821;

    /**
     * The reference instance of <code>lemon.t_tag</code>
     */
    public static final TTag T_TAG = new TTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTagRecord> getRecordType() {
        return TTagRecord.class;
    }

    /**
     * The column <code>lemon.t_tag.id</code>.
     */
    public final TableField<TTagRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lemon.t_tag.name</code>. 名字
     */
    public final TableField<TTagRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "名字");

    /**
     * The column <code>lemon.t_tag.create_time</code>. 创建时间
     */
    public final TableField<TTagRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>lemon.t_tag.update_time</code>. 更新时间
     */
    public final TableField<TTagRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>lemon.t_tag.status</code>. 状态标识,0-正常,1-删除
     */
    public final TableField<TTagRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "状态标识,0-正常,1-删除");

    /**
     * The column <code>lemon.t_tag.article_count</code>.
     */
    public final TableField<TTagRecord, Integer> ARTICLE_COUNT = createField("article_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>lemon.t_tag.bg_color</code>.
     */
    public final TableField<TTagRecord, String> BG_COLOR = createField("bg_color", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

    /**
     * The column <code>lemon.t_tag.font_color</code>.
     */
    public final TableField<TTagRecord, String> FONT_COLOR = createField("font_color", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

    /**
     * Create a <code>lemon.t_tag</code> table reference
     */
    public TTag() {
        this("t_tag", null);
    }

    /**
     * Create an aliased <code>lemon.t_tag</code> table reference
     */
    public TTag(String alias) {
        this(alias, T_TAG);
    }

    private TTag(String alias, Table<TTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTag(String alias, Table<TTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "标签");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lemon.LEMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TTagRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_TAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTagRecord> getPrimaryKey() {
        return Keys.KEY_T_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTagRecord>> getKeys() {
        return Arrays.<UniqueKey<TTagRecord>>asList(Keys.KEY_T_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TTag as(String alias) {
        return new TTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TTag rename(String name) {
        return new TTag(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package top.joylife.lemon.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import top.joylife.lemon.jooq.tables.TAccount;


/**
 * 用户账号信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAccountRecord extends UpdatableRecordImpl<TAccountRecord> implements Record8<Integer, Integer, Integer, String, String, Timestamp, Timestamp, Boolean> {

    private static final long serialVersionUID = -635780294;

    /**
     * Setter for <code>lemon.t_account.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lemon.t_account.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lemon.t_account.user_id</code>. 用户id
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lemon.t_account.user_id</code>. 用户id
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>lemon.t_account.identify_type</code>. 账号类型,1-平台账号
     */
    public void setIdentifyType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lemon.t_account.identify_type</code>. 账号类型,1-平台账号
     */
    public Integer getIdentifyType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>lemon.t_account.identifier</code>. 登录标识，登录账号
     */
    public void setIdentifier(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>lemon.t_account.identifier</code>. 登录标识，登录账号
     */
    public String getIdentifier() {
        return (String) get(3);
    }

    /**
     * Setter for <code>lemon.t_account.credential</code>. 密码凭证
     */
    public void setCredential(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>lemon.t_account.credential</code>. 密码凭证
     */
    public String getCredential() {
        return (String) get(4);
    }

    /**
     * Setter for <code>lemon.t_account.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>lemon.t_account.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>lemon.t_account.update_time</code>. 更新时间
     */
    public void setUpdateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>lemon.t_account.update_time</code>. 更新时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>lemon.t_account.status</code>. 状态标识，0-正常，1-删除
     */
    public void setStatus(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>lemon.t_account.status</code>. 状态标识，0-正常，1-删除
     */
    public Boolean getStatus() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, String, Timestamp, Timestamp, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, String, Timestamp, Timestamp, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TAccount.T_ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TAccount.T_ACCOUNT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TAccount.T_ACCOUNT.IDENTIFY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TAccount.T_ACCOUNT.IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TAccount.T_ACCOUNT.CREDENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return TAccount.T_ACCOUNT.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return TAccount.T_ACCOUNT.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return TAccount.T_ACCOUNT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdentifyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCredential();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value3(Integer value) {
        setIdentifyType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value4(String value) {
        setIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value5(String value) {
        setCredential(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value6(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value7(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord value8(Boolean value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAccountRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Timestamp value6, Timestamp value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TAccountRecord
     */
    public TAccountRecord() {
        super(TAccount.T_ACCOUNT);
    }

    /**
     * Create a detached, initialised TAccountRecord
     */
    public TAccountRecord(Integer id, Integer userId, Integer identifyType, String identifier, String credential, Timestamp createTime, Timestamp updateTime, Boolean status) {
        super(TAccount.T_ACCOUNT);

        set(0, id);
        set(1, userId);
        set(2, identifyType);
        set(3, identifier);
        set(4, credential);
        set(5, createTime);
        set(6, updateTime);
        set(7, status);
    }
}

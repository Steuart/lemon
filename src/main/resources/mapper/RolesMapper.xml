<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.joylife.lemon.dao.RolesMapper">
    <resultMap id="BaseResultMap" type="top.joylife.lemon.entity.Roles">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, rolename, create_time, update_time, delete_flag
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from roles
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--通过用户id获取用户角色列表-->
    <select id="selectRoleNameByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
        select r.rolename
        from role r
        left join user_role ur
        on ur.role_id = r.id
        where ur.user_id = #{userId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from roles
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="top.joylife.lemon.entity.Roles">
        insert into roles (id, rolename, create_time,
          update_time, delete_flag)
        values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
          #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER})
     </insert>
    <insert id="insertSelective" parameterType="top.joylife.lemon.entity.Roles">
        insert into roles
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.joylife.lemon.entity.Roles">
        update roles
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.joylife.lemon.entity.Roles">
    update roles
    set rolename = #{rolename,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>